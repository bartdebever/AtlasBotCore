// <auto-generated />
using DataLibrary;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace DataLibrary.Migrations.MockMigrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20180409183853_Added botcommander")]
    partial class Addedbotcommander
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AtlasBot.Modules.RoleEmote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("DiscordRole");

                    b.Property<long>("Emote");

                    b.Property<int?>("OptionsId");

                    b.HasKey("Id");

                    b.HasIndex("OptionsId");

                    b.ToTable("RoleEmotes");
                });

            modelBuilder.Entity("DataLibrary.Discord.Implemented.DiscordSavedServer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("BotCommanderRole");

                    b.Property<int?>("OptionsId");

                    b.Property<long>("ServerId");

                    b.HasKey("Id");

                    b.HasIndex("OptionsId");

                    b.ToTable("Servers");
                });

            modelBuilder.Entity("DataLibrary.DiscordModule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Enabled");

                    b.Property<string>("Name");

                    b.Property<int?>("OptionsId");

                    b.HasKey("Id");

                    b.HasIndex("OptionsId");

                    b.ToTable("DiscordModule");
                });

            modelBuilder.Entity("DataLibrary.Options", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("BotChannel");

                    b.Property<long>("BotCommander");

                    b.Property<long>("RoleEmoteMessageId");

                    b.HasKey("Id");

                    b.ToTable("Options");
                });

            modelBuilder.Entity("DataLibrary.Useraccounts.Implementation.APISummoner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Region");

                    b.Property<long>("SummonerId");

                    b.HasKey("Id");

                    b.ToTable("Summoners");
                });

            modelBuilder.Entity("AtlasBot.Modules.RoleEmote", b =>
                {
                    b.HasOne("DataLibrary.Options")
                        .WithMany("RoleEmotes")
                        .HasForeignKey("OptionsId");
                });

            modelBuilder.Entity("DataLibrary.Discord.Implemented.DiscordSavedServer", b =>
                {
                    b.HasOne("DataLibrary.Options", "Options")
                        .WithMany()
                        .HasForeignKey("OptionsId");
                });

            modelBuilder.Entity("DataLibrary.DiscordModule", b =>
                {
                    b.HasOne("DataLibrary.Options")
                        .WithMany("ModulesEnabled")
                        .HasForeignKey("OptionsId");
                });
#pragma warning restore 612, 618
        }
    }
}
