// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using SmashggTracker.DAL;
using System;

namespace SmashggTracker.Migrations
{
    [DbContext(typeof(SmashggTrackerContext))]
    [Migration("20180514073345_Added date and other data to match.")]
    partial class Addeddateandotherdatatomatch
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SmashggTracker.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Abbr");

                    b.Property<string>("Name");

                    b.Property<int>("SmashggId");

                    b.HasKey("Id");

                    b.ToTable("Game");
                });

            modelBuilder.Entity("SmashggTracker.Models.GameEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<int>("SmashggId");

                    b.Property<int?>("TournamentId");

                    b.HasKey("Id");

                    b.HasIndex("TournamentId");

                    b.ToTable("GameEvent");
                });

            modelBuilder.Entity("SmashggTracker.Models.GameMatch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CharacterIdP1");

                    b.Property<int>("CharacterIdP2");

                    b.Property<int?>("MatchId");

                    b.Property<int>("StageId");

                    b.Property<int>("StocksP1");

                    b.Property<int>("StocksP2");

                    b.HasKey("Id");

                    b.HasIndex("MatchId");

                    b.ToTable("GameMatch");
                });

            modelBuilder.Entity("SmashggTracker.Models.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<double>("DateDouble");

                    b.Property<int?>("EventId");

                    b.Property<int?>("GameId");

                    b.Property<int?>("Player1Id");

                    b.Property<int?>("Player2Id");

                    b.Property<string>("Position");

                    b.Property<int>("Score1");

                    b.Property<int>("Score2");

                    b.Property<int>("SmashggId");

                    b.Property<int?>("TournamentId");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("GameId");

                    b.HasIndex("Player1Id");

                    b.HasIndex("Player2Id");

                    b.HasIndex("TournamentId");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("SmashggTracker.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<int>("SmashggId");

                    b.Property<string>("Sponsor");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("SmashggTracker.Models.Tournament", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<int>("SmashggId");

                    b.HasKey("Id");

                    b.ToTable("Tournaments");
                });

            modelBuilder.Entity("SmashggTracker.Models.GameEvent", b =>
                {
                    b.HasOne("SmashggTracker.Models.Tournament")
                        .WithMany("Events")
                        .HasForeignKey("TournamentId");
                });

            modelBuilder.Entity("SmashggTracker.Models.GameMatch", b =>
                {
                    b.HasOne("SmashggTracker.Models.Match")
                        .WithMany("Matches")
                        .HasForeignKey("MatchId");
                });

            modelBuilder.Entity("SmashggTracker.Models.Match", b =>
                {
                    b.HasOne("SmashggTracker.Models.GameEvent", "Event")
                        .WithMany()
                        .HasForeignKey("EventId");

                    b.HasOne("SmashggTracker.Models.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId");

                    b.HasOne("SmashggTracker.Models.Player", "Player1")
                        .WithMany()
                        .HasForeignKey("Player1Id");

                    b.HasOne("SmashggTracker.Models.Player", "Player2")
                        .WithMany()
                        .HasForeignKey("Player2Id");

                    b.HasOne("SmashggTracker.Models.Tournament", "Tournament")
                        .WithMany("Matches")
                        .HasForeignKey("TournamentId");
                });
#pragma warning restore 612, 618
        }
    }
}
